#!/bin/bash

readonly s3basepath=umbrella
readonly target="s3://demo.thi.ng/$s3basepath"
readonly cloudfrontid=EL2F1HMDPZ2RL
readonly awsprofile=toxi-full
readonly opts="--profile $awsprofile --acl public-read"

if [ $# = 1 ]; then
    modules="examples/$1"
else
    modules="examples/*"
fi

for m in $modules; do
    if [ -d "$m" ] && [ ! -e "$m/.skip" ]; then
        name=$(echo "$m" | cut -d '/' -f 2)
        dest="$target/$name"
        src=$(find "$m"/out -name '*.js.gz' | cut -d '/' -f 4)
        echo "------------------------------"
        echo "uploading $m..."
        echo "------------------------------"
        if [ -e "$m"/out/assets ]; then
            aws s3 sync "$m"/out/assets "$dest"/assets $opts
        fi
        assets=$(find "$m"/out -name '*.png')
        if [ -n "$assets" ]; then
            aws s3 cp "$m"/out/*.png "$dest"/ $opts
        fi
        assets=$(find "$m"/out -name '*.json')
        if [ -n "$assets" ]; then
            for a in $assets; do
                origname=$(basename -- "$a")
                gzip "$a"
                aws s3 cp "$a".gz "$dest"/"$origname" $opts --content-type "application/json; charset=utf-8" --content-encoding gzip
            done
        fi
        for js in $src; do
            len=${#js}
            js2="${js:0:len-3}"
            aws s3 cp "$m"/out/"$js" "$dest"/"$js2" $opts --content-type "application/javascript; charset=utf-8" --content-encoding gzip
        done
        aws s3 cp "$m"/out/index.html "$dest"/ $opts --cache-control "max-age=900"

        aws cloudfront create-invalidation \
            --distribution-id $cloudfrontid \
            --paths "/$s3basepath/$m/*" \
            --profile $awsprofile
    fi
done
