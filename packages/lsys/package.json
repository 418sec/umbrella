{
    "name": "@thi.ng/lsys",
    "version": "0.2.33",
    "description": "Functional, extensible L-System architecture w/ support for probabilistic rules",
    "module": "./index.js",
    "main": "./lib/index.js",
    "umd:main": "./lib/index.umd.js",
    "typings": "./index.d.ts",
    "repository": {
        "type": "git",
        "url": "https://github.com/thi-ng/umbrella.git"
    },
    "homepage": "https://github.com/thi-ng/umbrella/tree/master/packages/lsys",
    "author": "Karsten Schmidt <k+npm@thi.ng>",
    "license": "Apache-2.0",
    "scripts": {
        "build": "yarn clean && yarn build:es6 && node ../../scripts/bundle-module",
        "build:release": "yarn clean && yarn build:es6 && node ../../scripts/bundle-module all",
        "build:es6": "tsc --declaration",
        "build:test": "rimraf build && tsc -p test/tsconfig.json",
        "test": "mocha test",
        "cover": "nyc mocha test && nyc report --reporter=lcov",
        "clean": "rimraf *.js *.d.ts .nyc_output build coverage doc lib",
        "doc:readme": "ts-node -P ../../tools/tsconfig.json ../../tools/src/readme.ts",
        "doc": "node_modules/.bin/typedoc --mode modules --out doc src",
        "doc:ae": "mkdir -p .ae/doc .ae/temp && node_modules/.bin/api-extractor run --local --verbose",
        "pub": "yarn build:release && yarn publish --access public"
    },
    "devDependencies": {
        "@istanbuljs/nyc-config-typescript": "^1.0.1",
        "@microsoft/api-extractor": "^7.7.8",
        "@types/mocha": "^7.0.1",
        "@types/node": "^13.7.4",
        "mocha": "^7.1.1",
        "nyc": "^15.0.0",
        "ts-node": "^8.6.2",
        "typedoc": "^0.16.10",
        "typescript": "^3.8.3"
    },
    "dependencies": {
        "@thi.ng/api": "^6.9.0",
        "@thi.ng/compose": "^1.4.0",
        "@thi.ng/errors": "^1.2.8",
        "@thi.ng/math": "^1.7.4",
        "@thi.ng/random": "^1.4.2",
        "@thi.ng/transducers": "^6.4.2",
        "@thi.ng/vectors": "^4.2.2",
        "tslib": "^1.11.1"
    },
    "keywords": [
        "axiom",
        "2d",
        "3d",
        "ES6",
        "generative",
        "geometry",
        "l-system",
        "probabilistic",
        "rule based",
        "turtle",
        "typescript"
    ],
    "publishConfig": {
        "access": "public"
    },
    "sideEffects": false,
    "thi.ng": {
        "blog": [
            {
                "title": "Workshop report: Generative design with Clojure",
                "url": "https://medium.com/@thi.ng/workshop-report-generative-design-with-clojure-7d6d8ea9a6e8"
            }
        ],
        "status": "beta",
        "year": 2019
    }
}
